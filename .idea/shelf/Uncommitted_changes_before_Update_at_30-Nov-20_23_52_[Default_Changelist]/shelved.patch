Index: app/src/main/java/com/example/shroomies/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.shroomies;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.ActionBarDrawerToggle;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.core.view.GravityCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.fragment.app.FragmentTransaction;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\r\nimport com.google.android.material.navigation.NavigationView;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n    DrawerLayout drawerLayout;\r\n    ActionBarDrawerToggle barDrawerToggle;\r\n    Toolbar toolbar;\r\n    NavigationView navigationView;\r\n    static BottomNavigationView btm_view;\r\n    FragmentTransaction ft;\r\n    FragmentManager fm;\r\n    ImageView myShroomies;\r\n    TextView usernameDrawer;\r\n    SessionManager sessionManager;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        Bundle extras = getIntent().getExtras();\r\n        if(extras!=null){\r\n            String username = extras.getString(\"USERNAME\");\r\n            String email=extras.getString(\"EMAIL\");\r\n            sessionManager=new SessionManager(getApplicationContext(),username);\r\n            sessionManager.createSession(username,email);\r\n            Toast.makeText(this,username,Toast.LENGTH_LONG).show();\r\n        }\r\n        btm_view = findViewById(R.id.bottomNavigationView);\r\n        drawerLayout = (DrawerLayout) findViewById(R.id.drawerLayout);\r\n        toolbar = (Toolbar) findViewById(R.id.toolbar);\r\n        usernameDrawer=findViewById(R.id.drawer_nav_profile_name);\r\n\r\n        setSupportActionBar(toolbar);\r\n        getFragment(new FindRoommate());\r\n        barDrawerToggle = new ActionBarDrawerToggle(this, drawerLayout, toolbar, R.string.open, R.string.close);\r\n        drawerLayout.addDrawerListener(barDrawerToggle);\r\n        barDrawerToggle.setDrawerIndicatorEnabled(true);\r\n        barDrawerToggle.syncState();\r\n        navigationView = (NavigationView) findViewById(R.id.navigationView);\r\n        navigationView.setNavigationItemSelectedListener(new NavigationView.OnNavigationItemSelectedListener() {\r\n            @Override\r\n            public boolean onNavigationItemSelected(@NonNull MenuItem menuItem) {\r\n                drawerLayout.closeDrawer(GravityCompat.START);\r\n                if(menuItem.getItemId()==R.id.setting_menu){\r\n                    getFragment(new PrivacySetting());\r\n                }if(menuItem.getItemId()==R.id.my_archive_menu){\r\n                    getFragment(new Archive());\r\n                }if(menuItem.getItemId()==R.id.my_favorite_menu){\r\n                    getFragment(new Favorite());\r\n\r\n                }if(menuItem.getItemId()==R.id.my_requests_menu){\r\n                    getFragment(new Request());\r\n                }if(menuItem.getItemId()==R.id.logout){\r\n                    finish();\r\n                    sessionManager.logout();\r\n                    Intent intent = new Intent(MainActivity.this , LoginActivity.class);\r\n                    intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                    finish();\r\n                    startActivity(intent);\r\n                    finish();\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n        btm_view.setOnNavigationItemSelectedListener(new BottomNavigationView.OnNavigationItemSelectedListener(){\r\n\r\n            @Override\r\n            public boolean onNavigationItemSelected(@NonNull MenuItem menuItem) {\r\n                if(menuItem.getItemId()==R.id.find_roomie_menu){\r\n                    getFragment(new FindRoommate());\r\n                }if(menuItem.getItemId()==R.id.publish_post_menu){\r\n                    getFragment(new PublishPost());\r\n                }if(menuItem.getItemId()==R.id.message_inbox_menu){\r\n                    getFragment(new MessageInbox());\r\n\r\n                }if(menuItem.getItemId()==R.id.user_profile_menu){\r\n                    getFragment(new UserProfile());\r\n                }\r\n                return true;\r\n            }\r\n        });\r\n        myShroomies=findViewById(R.id.logo_toolbar);\r\n        myShroomies.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                getFragment(new MyShroomies());\r\n            }\r\n        });\r\n\r\n    }\r\n    private void getFragment (Fragment fragment) {\r\n        fm = getSupportFragmentManager();\r\n        ft = fm.beginTransaction();\r\n        ft.addToBackStack(null);\r\n        ft.replace(R.id.fragmentContainer, fragment);\r\n        ft.commit();\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/shroomies/MainActivity.java	(revision e57c815b76854a0fb660ccf0476f3c3415d02ddb)
+++ app/src/main/java/com/example/shroomies/MainActivity.java	(date 1606758111447)
@@ -20,6 +20,8 @@
 
 import com.google.android.material.bottomnavigation.BottomNavigationView;
 import com.google.android.material.navigation.NavigationView;
+import com.google.firebase.auth.FirebaseAuth;
+import com.google.firebase.auth.FirebaseUser;
 
 public class MainActivity extends AppCompatActivity {
     DrawerLayout drawerLayout;
@@ -36,7 +38,16 @@
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
+
         setContentView(R.layout.activity_main);
+        FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();
+        if (user != null) {
+            // Name, email address, and profile photo Url
+            String name = user.getDisplayName();
+            String email = user.getEmail();
+            Toast.makeText(MainActivity.this, "Welcome to Shroomies! "+ name, Toast.LENGTH_SHORT).show();
+        }
+
         Bundle extras = getIntent().getExtras();
         if(extras!=null){
             String username = extras.getString("USERNAME");
Index: app/src/main/java/com/example/shroomies/LoginActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.shroomies;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\n\r\nimport android.text.Editable;\r\nimport android.text.TextUtils;\r\nimport android.text.TextWatcher;\r\nimport android.util.Log;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.biometric.BiometricConstants;\r\nimport androidx.biometric.BiometricPrompt;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.fragment.app.FragmentActivity;\r\n\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInAccount;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInOptions;\r\nimport com.google.android.gms.common.api.ApiException;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthCredential;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseAuthInvalidCredentialsException;\r\nimport com.google.firebase.auth.FirebaseAuthInvalidUserException;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.auth.GoogleAuthProvider;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignIn;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInAccount;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInClient;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInOptions;\r\nimport com.google.android.gms.common.api.ApiException;\r\nimport com.google.firebase.auth.UserInfo;\r\n\r\nimport java.io.File;\r\nimport java.util.concurrent.Executor;\r\n\r\npublic class LoginActivity extends AppCompatActivity {\r\n   protected EditText username;\r\n   protected EditText password;\r\n    Button login;\r\n    TextView signup;\r\n    private final int RC_SIGN_IN = 7;\r\n    GoogleSignInClient mGoogleSignInClient;\r\n    FirebaseAuth mAuth;\r\n    TextView forgotPassword;\r\n    SessionManager sessionManager;\r\n    boolean successBiometric = false;\r\n    static String user;\r\n    private Executor executor;\r\n    private BiometricPrompt biometricPrompt;\r\n    private BiometricPrompt.PromptInfo promptInfo;\r\n    boolean alredyLoggedin = false;\r\n    Button google_sign;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        sessionManager=new SessionManager();\r\n        user=sessionManager.checkUsersLoggedIn(getApplicationContext());\r\n        if(user!=null){\r\n            Intent intent = new Intent(LoginActivity.this, MainActivity.class);\r\n            intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_CLEAR_TOP);\r\n            intent.putExtra(\"USERNAME\",user);\r\n            startActivity(intent);\r\n            finish();\r\n        }\r\n        setContentView(R.layout.activity_login);\r\n        username=findViewById(R.id.email_login);\r\n        password=findViewById(R.id.password_login);\r\n        login=findViewById(R.id.login_button);\r\n        signup=findViewById(R.id.sign_up_button);\r\n        google_sign = findViewById(R.id.google_sign_up);\r\n        forgotPassword=findViewById(R.id.forgot_password_login);\r\n        username.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n                String typedUsername=username.getText().toString();\r\n                sessionManager=new SessionManager(getApplicationContext(),typedUsername);\r\n                if(sessionManager.biometricIsEnabled()){\r\n                    password.setOnTouchListener(new View.OnTouchListener() {\r\n                        @Override\r\n                        public boolean onTouch(View v, MotionEvent event) {\r\n                            setBiometric();\r\n                            promptInfo = new BiometricPrompt.PromptInfo.Builder()\r\n                                    .setTitle(\"Biometric login for my app\")\r\n                                    .setSubtitle(\"Log in using your biometric credential\")\r\n                                    .setNegativeButtonText(\"Use account password\")\r\n                                    .build();\r\n                            biometricPrompt.authenticate(promptInfo);\r\n                            return false;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n        GoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)\r\n                .requestIdToken(getString(R.string.default_web_client_id))\r\n                .requestEmail()\r\n                .build();\r\n\r\n        mGoogleSignInClient = GoogleSignIn.getClient(this, gso);\r\n        google_sign.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                signIn();\r\n            }\r\n        });\r\n        forgotPassword.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent=new Intent(getApplication(),ResetPassword.class);\r\n                startActivity(intent);\r\n                finish();\r\n\r\n            }\r\n        });\r\n        mAuth = FirebaseAuth.getInstance();\r\n\r\n        signup.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent=new Intent(getApplication(),SignUpActivity.class);\r\n                startActivity(intent);\r\n                finish();\r\n\r\n            }\r\n        });\r\nif(!successBiometric){\r\n        login.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n             loginUser(successBiometric);\r\n            }\r\n        });\r\n\r\n    }}\r\n    private void loginUser(boolean biometricSuccessful){\r\n        final String uname_txt = username.getText().toString();\r\n        String pw_txt = password.getText().toString();\r\n\r\n        if (TextUtils.isEmpty(uname_txt) || TextUtils.isEmpty(pw_txt)){\r\n            Toast.makeText(LoginActivity.this, \"Please fill in your details\",Toast.LENGTH_SHORT).show();\r\n        }\r\n        else {\r\n            if(biometricSuccessful){\r\n                sessionManager=new SessionManager(getApplicationContext(),uname_txt);\r\n                // get name of the user\r\n                sessionManager.createSession(mAuth.getCurrentUser().getDisplayName().toString(),uname_txt);\r\n                Toast.makeText(LoginActivity.this, \"Welcome to Shroomies!\", Toast.LENGTH_SHORT).show();\r\n                Intent intent = new Intent(LoginActivity.this, MainActivity.class);\r\n                intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_CLEAR_TOP);\r\n                startActivity(intent);\r\n                finish();\r\n            }\r\n\r\n            mAuth.signInWithEmailAndPassword(uname_txt, pw_txt). addOnCompleteListener(new OnCompleteListener<AuthResult>() {\r\n                @Override\r\n                public void onComplete(@NonNull Task<AuthResult> task) {\r\n                    if (task.isSuccessful()){\r\n                        FirebaseUser user = mAuth.getCurrentUser();\r\n                        if (user != null) {\r\n                            for (UserInfo profile : user.getProviderData()){\r\n                                String name = profile.getDisplayName();\r\n                                String email = profile.getEmail();\r\n//                                sessionManager=new SessionManager(getApplicationContext(),email);\r\n//                                sessionManager.createSession(name,email);\r\n                                Toast.makeText(LoginActivity.this, \"Welcome to Shroomies! \"+email, Toast.LENGTH_SHORT).show();\r\n                                Intent intent = new Intent(LoginActivity.this, MainActivity.class);\r\n                                intent.putExtra(\"USERNAME\",name);\r\n                                intent.putExtra(\"EMIAL\",email);\r\n                                intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_CLEAR_TOP);\r\n                                startActivity(intent);\r\n                                finish();\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }).addOnFailureListener(new OnFailureListener() {\r\n                @Override\r\n                public void onFailure(@NonNull Exception e) {\r\n                    if (e instanceof FirebaseAuthInvalidCredentialsException) {\r\n                        Toast.makeText(LoginActivity.this, \"Invalid password\", Toast.LENGTH_SHORT).show();\r\n                    } else if (e instanceof FirebaseAuthInvalidUserException) {\r\n\r\n                        String errorCode =\r\n                                ((FirebaseAuthInvalidUserException) e).getErrorCode();\r\n\r\n                        if (errorCode.equals(\"ERROR_USER_NOT_FOUND\")) {\r\n                            Toast.makeText(LoginActivity.this, \"The email does not belong to a registered account. Please proceed to Sign Up.\", Toast.LENGTH_SHORT).show();\r\n                        } else if (errorCode.equals(\"ERROR_USER_DISABLED\")) {\r\n                            Toast.makeText(LoginActivity.this, \"User account has been disabled\", Toast.LENGTH_SHORT).show();\r\n                        } else {\r\n                            Toast.makeText(LoginActivity.this, e.getLocalizedMessage(), Toast.LENGTH_SHORT).show();\r\n                        }\r\n\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        }\r\n    boolean setBiometric(){\r\n        executor = ContextCompat.getMainExecutor(this);\r\n        biometricPrompt = new BiometricPrompt(LoginActivity.this,\r\n                executor, new BiometricPrompt.AuthenticationCallback() {\r\n            @Override\r\n            public void onAuthenticationError(int errorCode,\r\n                                              @NonNull CharSequence errString) {\r\n                super.onAuthenticationError(errorCode, errString);\r\n                if (errorCode == BiometricConstants.ERROR_USER_CANCELED){\r\n                    password.setOnTouchListener(null);\r\n                }else{\r\n                    Toast.makeText(getApplicationContext(),\r\n                            \"Authentication error: \" + errString, Toast.LENGTH_SHORT)\r\n                            .show();\r\n                }\r\n                successBiometric = false;\r\n            }\r\n            @Override\r\n            public void onAuthenticationSucceeded(\r\n                    @NonNull BiometricPrompt.AuthenticationResult result) {\r\n                super.onAuthenticationSucceeded(result);\r\n                successBiometric=true;\r\n                loginUser(successBiometric);\r\n            }\r\n            @Override\r\n            public void onAuthenticationFailed() {\r\n                super.onAuthenticationFailed();\r\n                Toast.makeText(getApplicationContext(), \"Authentication failed\",\r\n                        Toast.LENGTH_SHORT)\r\n                        .show();\r\n                successBiometric=false;\r\n            }\r\n        });\r\n\r\n        // Prompt appears when user clicks \"Log in\".\r\n        // Consider integrating with the keystore to unlock cryptographic operations,\r\n        // if needed by your app.\r\n        return successBiometric;\r\n    }\r\n    private void signIn() {\r\n        Intent signInIntent = mGoogleSignInClient.getSignInIntent();\r\n        startActivityForResult(signInIntent, RC_SIGN_IN);\r\n    }\r\n    public void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n\r\n        if (requestCode == RC_SIGN_IN) {\r\n\r\n            Task<GoogleSignInAccount> task = GoogleSignIn.getSignedInAccountFromIntent(data);\r\n            try {\r\n                GoogleSignInAccount account = task.getResult(ApiException.class);\r\n\r\n                firebaseAuthWithGoogle(account);\r\n            } catch (ApiException e) {\r\n                Toast.makeText(LoginActivity.this, e.getMessage(), Toast.LENGTH_SHORT).show();\r\n            }\r\n        }\r\n    }\r\n    private void firebaseAuthWithGoogle(GoogleSignInAccount acct) {\r\n        Log.d(\"Login\",\"firebaseAuthWithGoogle:\" + acct.getId());\r\n\r\n        AuthCredential credential = GoogleAuthProvider.getCredential(acct.getIdToken(), null);\r\n\r\n        mAuth.signInWithCredential(credential).addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<AuthResult> task) {\r\n                if (task.isSuccessful()){\r\n                    Log.d(\"Login\", \"signInWithCredential:Success\");\r\n                    FirebaseUser user = mAuth.getCurrentUser();\r\n                    sessionManager=new SessionManager(getApplicationContext(),user.getEmail());\r\n                    sessionManager.createSession(user.getEmail(),user.getEmail());\r\n                    Intent intent= new Intent(getApplicationContext(),MainActivity.class);\r\n                    startActivity(intent);\r\n\r\n                    Toast.makeText(LoginActivity.this, \"User Signed In\", Toast.LENGTH_SHORT).show();\r\n                }\r\n                else{\r\n                    Log.w(\"Login\", \"signInWithCredentail:Failure\", task.getException());\r\n                    Toast.makeText(LoginActivity.this, \"Authentication Failed\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/shroomies/LoginActivity.java	(revision e57c815b76854a0fb660ccf0476f3c3415d02ddb)
+++ app/src/main/java/com/example/shroomies/LoginActivity.java	(date 1606755003928)
@@ -298,7 +298,7 @@
                     Toast.makeText(LoginActivity.this, "User Signed In", Toast.LENGTH_SHORT).show();
                 }
                 else{
-                    Log.w("Login", "signInWithCredentail:Failure", task.getException());
+                    Log.w("Login", "signInWithCredential:Failure", task.getException());
                     Toast.makeText(LoginActivity.this, "Authentication Failed", Toast.LENGTH_SHORT).show();
                 }
             }
Index: app/src/main/res/layout/activity_reset_password.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@drawable/gradient_yellow_background\">\r\n\r\n\r\n    <TextView\r\n        android:id=\"@+id/txt_forgot\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:padding=\"10dp\"\r\n        android:text=\"Forgot your password?\"\r\n        android:layout_marginTop=\"100dp\"\r\n        android:layout_marginLeft=\"20dp\"\r\n        android:textSize=\"30sp\"\r\n        android:textStyle=\"bold\"\r\n        android:textColor=\"@android:color/black\"/>\r\n\r\n    <TextView\r\n        android:id=\"@+id/txt_enter_email\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@+id/txt_forgot\"\r\n        android:padding=\"10dp\"\r\n        android:text=\"Enter email id to reset password\"\r\n        android:layout_marginLeft=\"30dp\"\r\n        android:layout_marginTop=\"50dp\"\r\n        android:textSize=\"20sp\"\r\n        android:textStyle=\"bold\"\r\n        android:textColor=\"@android:color/black\" />\r\n\r\n    <EditText\r\n        android:id=\"@+id/edt_reset_email\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@+id/txt_enter_email\"\r\n        android:layout_marginRight=\"50dp\"\r\n        android:layout_marginLeft=\"50dp\"\r\n        android:layout_marginTop=\"10dp\"\r\n        android:hint=\"  Enter registered email here  \"\r\n        android:textSize=\"20sp\"\r\n        android:inputType=\"textEmailAddress\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/btn_reset_password\"\r\n        android:layout_width=\"200dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@+id/edt_reset_email\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:layout_marginTop=\"30dp\"\r\n        android:text=\"Reset Password\"\r\n        android:background=\"@drawable/button_round\"/>\r\n\r\n    <Button\r\n        android:id=\"@+id/btn_back\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@+id/btn_reset_password\"\r\n        android:layout_marginTop=\"50dp\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:background=\"@drawable/button_round\"\r\n        android:text=\"BACK\"\r\n        android:textColor=\"@color/colorAccent\" />\r\n\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_reset_password.xml	(revision e57c815b76854a0fb660ccf0476f3c3415d02ddb)
+++ app/src/main/res/layout/activity_reset_password.xml	(date 1606755877832)
@@ -9,32 +9,23 @@
         android:id="@+id/txt_forgot"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:padding="10dp"
-        android:text="Forgot your password?"
-        android:layout_marginTop="100dp"
         android:layout_marginLeft="20dp"
-        android:textSize="30sp"
-        android:textStyle="bold"
-        android:textColor="@android:color/black"/>
-
-    <TextView
-        android:id="@+id/txt_enter_email"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_below="@+id/txt_forgot"
+        android:layout_marginTop="100dp"
+        android:layout_marginRight="20dp"
+        android:background="@drawable/txt_bg_rectangle"
         android:padding="10dp"
-        android:text="Enter email id to reset password"
-        android:layout_marginLeft="30dp"
-        android:layout_marginTop="50dp"
-        android:textSize="20sp"
-        android:textStyle="bold"
-        android:textColor="@android:color/black" />
+        android:text="Enter your email to proceed with password recovery"
+        android:textAlignment="center"
+        android:textColor="@android:color/black"
+        android:textSize="20sp" />
+
+
 
     <EditText
         android:id="@+id/edt_reset_email"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:layout_below="@+id/txt_enter_email"
+        android:layout_below="@+id/txt_forgot"
         android:layout_marginRight="50dp"
         android:layout_marginLeft="50dp"
         android:layout_marginTop="10dp"
Index: app/src/main/res/drawable/txt_bg_rectangle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/txt_bg_rectangle.xml	(date 1606755722456)
+++ app/src/main/res/drawable/txt_bg_rectangle.xml	(date 1606755722456)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android">
+    android:shape = "rectangle">
+    <solid android:color="@android:color/white"/>
+    <corners android:radius="10dp"/>
+</shape>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_30-Nov-20_22_15__Default_Changelist_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_30-Nov-20_22_15__Default_Changelist_.xml	(date 1606758112826)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_30-Nov-20_22_15__Default_Changelist_.xml	(date 1606758112826)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Update_at_30-Nov-20_22_15_[Default_Changelist]" date="1606754779219" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_30-Nov-20_22_15_[Default_Changelist]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 30-Nov-20 22:15 [Default Changelist]" />
+</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_30-Nov-20_22_15_[Default_Changelist]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_30-Nov-20_22_15_[Default_Changelist]/shelved.patch	(date 1606754702149)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_30-Nov-20_22_15_[Default_Changelist]/shelved.patch	(date 1606754702149)
@@ -0,0 +1,53 @@
+Index: app/src/main/java/com/example/shroomies/LoginActivity.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package com.example.shroomies;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\n\r\nimport android.text.TextUtils;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.biometric.BiometricConstants;\r\nimport androidx.biometric.BiometricPrompt;\r\nimport androidx.core.content.ContextCompat;\r\n\r\nimport com.google.android.gms.auth.api.signin.GoogleSignIn;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInAccount;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInClient;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInOptions;\r\nimport com.google.android.gms.common.api.ApiException;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthCredential;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseAuthInvalidCredentialsException;\r\nimport com.google.firebase.auth.FirebaseAuthInvalidUserException;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.auth.GoogleAuthProvider;\r\n\r\nimport java.io.File;\r\nimport java.util.concurrent.Executor;\r\n\r\npublic class LoginActivity extends AppCompatActivity {\r\n    protected EditText username;\r\n    protected EditText password;\r\n    Button login, google_sign;\r\n    TextView signup;\r\n\r\n    private final int RC_SIGN_IN = 7;\r\n    GoogleSignInClient mGoogleSignInClient;\r\n    FirebaseAuth mAuth;\r\n\r\n    SessionManager sessionManager;\r\n    boolean successBiometric = false;\r\n    static String user;\r\n    private Executor executor;\r\n    private BiometricPrompt biometricPrompt;\r\n    private BiometricPrompt.PromptInfo promptInfo;\r\n    boolean alredyLoggedin = false;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        try {\r\n            File root = new File(\"/data/data/com.example.Shroomies/shared_prefs\");\r\n            if (root.isDirectory()) {\r\n                for (File child : root.listFiles()) {\r\n                    String fileName = child.getPath().substring(48).split(\"\\\\.\")[0];\r\n                    SessionManager sessionManager = new SessionManager(LoginActivity.this, fileName);\r\n                    if (sessionManager.isLoggedIn()) {\r\n                        this.user = fileName;\r\n                        alredyLoggedin = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        } catch (Exception e) {\r\n        }\r\n        if (alredyLoggedin) {\r\n            startActivity(new Intent(this, MainActivity.class));\r\n            finish();\r\n            Toast.makeText(LoginActivity.this, \"logged in as \" + user, Toast.LENGTH_LONG).show();\r\n        }\r\n\r\n        setContentView(R.layout.activity_login);\r\n        username = findViewById(R.id.email_login);\r\n        password = findViewById(R.id.password_login);\r\n        login = findViewById(R.id.login_button);\r\n        signup = findViewById(R.id.sign_up_button);\r\n        google_sign = findViewById(R.id.google_sign_up);\r\n        mAuth = FirebaseAuth.getInstance();\r\n\r\n        signup.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(getApplication(), SignUpActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n        GoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)\r\n                .requestIdToken(getString(R.string.default_web_client_id))\r\n                .requestEmail()\r\n                .build();\r\n\r\n        mGoogleSignInClient = GoogleSignIn.getClient(this, gso);\r\n        google_sign.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                signIn();\r\n            }\r\n        });\r\n\r\n        login.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                String uname_txt = username.getText().toString();\r\n                String pw_txt = password.getText().toString();\r\n\r\n                if (TextUtils.isEmpty(uname_txt) || TextUtils.isEmpty(pw_txt)) {\r\n                    Toast.makeText(LoginActivity.this, \"Please fill in your details\", Toast.LENGTH_SHORT).show();\r\n                } else {\r\n                    loginUser(uname_txt, pw_txt);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void loginUser(String username, String password) {\r\n        mAuth.signInWithEmailAndPassword(username, password).addOnCompleteListener(new OnCompleteListener<AuthResult>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<AuthResult> task) {\r\n                if (task.isSuccessful()) {\r\n                    Toast.makeText(LoginActivity.this, \"Welcome to Shroomies!\", Toast.LENGTH_SHORT).show();\r\n                    Intent intent = new Intent(LoginActivity.this, MainActivity.class);\r\n                    intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_CLEAR_TOP);\r\n                    startActivity(intent);\r\n                    finish();\r\n                }\r\n            }\r\n        }).addOnFailureListener(new OnFailureListener() {\r\n            @Override\r\n            public void onFailure(@NonNull Exception e) {\r\n                if (e instanceof FirebaseAuthInvalidCredentialsException) {\r\n                    Toast.makeText(LoginActivity.this, \"Invalid password\", Toast.LENGTH_SHORT).show();\r\n                } else if (e instanceof FirebaseAuthInvalidUserException) {\r\n\r\n                    String errorCode =\r\n                            ((FirebaseAuthInvalidUserException) e).getErrorCode();\r\n\r\n                    if (errorCode.equals(\"ERROR_USER_NOT_FOUND\")) {\r\n                        Toast.makeText(LoginActivity.this, \"The email does not belong to a registered account. Please proceed to Sign Up.\", Toast.LENGTH_SHORT).show();\r\n                    } else if (errorCode.equals(\"ERROR_USER_DISABLED\")) {\r\n                        Toast.makeText(LoginActivity.this, \"User account has been disabled\", Toast.LENGTH_SHORT).show();\r\n                    } else {\r\n                        Toast.makeText(LoginActivity.this, e.getLocalizedMessage(), Toast.LENGTH_SHORT).show();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    boolean setBiometric() {\r\n        executor = ContextCompat.getMainExecutor(this);\r\n        biometricPrompt = new BiometricPrompt(LoginActivity.this,\r\n                executor, new BiometricPrompt.AuthenticationCallback() {\r\n            @Override\r\n            public void onAuthenticationError(int errorCode,\r\n                                              @NonNull CharSequence errString) {\r\n                super.onAuthenticationError(errorCode, errString);\r\n                if (errorCode == BiometricConstants.ERROR_USER_CANCELED) {\r\n                    login.setOnTouchListener(null);\r\n                } else {\r\n                    Toast.makeText(getApplicationContext(),\r\n                            \"Authentication error: \" + errString, Toast.LENGTH_SHORT)\r\n                            .show();\r\n                }\r\n                successBiometric = false;\r\n            }\r\n\r\n            @Override\r\n            public void onAuthenticationSucceeded(\r\n                    @NonNull BiometricPrompt.AuthenticationResult result) {\r\n                super.onAuthenticationSucceeded(result);\r\n                successBiometric = true;\r\n            }\r\n\r\n            @Override\r\n            public void onAuthenticationFailed() {\r\n                super.onAuthenticationFailed();\r\n                Toast.makeText(getApplicationContext(), \"Authentication failed\",\r\n                        Toast.LENGTH_SHORT)\r\n                        .show();\r\n                successBiometric = false;\r\n            }\r\n        });\r\n\r\n        // Prompt appears when user clicks \"Log in\".\r\n        // Consider integrating with the keystore to unlock cryptographic operations,\r\n        // if needed by your app.\r\n        return successBiometric;\r\n    }\r\n\r\n    private void signIn() {\r\n        Intent signInIntent = mGoogleSignInClient.getSignInIntent();\r\n        startActivityForResult(signInIntent, RC_SIGN_IN);\r\n    }\r\n    public void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n\r\n        if (requestCode == RC_SIGN_IN) {\r\n\r\n            Task<GoogleSignInAccount> task = GoogleSignIn.getSignedInAccountFromIntent(data);\r\n            try {\r\n                GoogleSignInAccount account = task.getResult(ApiException.class);\r\n\r\n                firebaseAuthWithGoogle(account);\r\n            } catch (ApiException e) {\r\n                Toast.makeText(LoginActivity.this, e.getMessage(), Toast.LENGTH_SHORT).show();\r\n            }\r\n        }\r\n    }\r\n    private void firebaseAuthWithGoogle(GoogleSignInAccount acct) {\r\n        Log.d(\"Login\",\"firebaseAuthWithGoogle:\" + acct.getId());\r\n\r\n        AuthCredential credential = GoogleAuthProvider.getCredential(acct.getIdToken(), null);\r\n\r\n        mAuth.signInWithCredential(credential).addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<AuthResult> task) {\r\n                if (task.isSuccessful()){\r\n                    Log.d(\"Login\", \"signInWithCredential:Success\");\r\n                    FirebaseUser user = mAuth.getCurrentUser();\r\n\r\n                    Toast.makeText(LoginActivity.this, \"User Signed In\", Toast.LENGTH_SHORT).show();\r\n                }\r\n                else{\r\n                    Log.w(\"Login\", \"signInWithCredentail:Failure\", task.getException());\r\n                    Toast.makeText(LoginActivity.this, \"Authentication Failed\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+--- app/src/main/java/com/example/shroomies/LoginActivity.java	(revision b5eed490fd6466253c4c7a3578131e1954620cbb)
++++ app/src/main/java/com/example/shroomies/LoginActivity.java	(date 1606748453604)
+@@ -32,6 +32,8 @@
+ import com.google.firebase.auth.FirebaseAuthInvalidUserException;
+ import com.google.firebase.auth.FirebaseUser;
+ import com.google.firebase.auth.GoogleAuthProvider;
++import com.google.firebase.auth.UserInfo;
++
+ 
+ import java.io.File;
+ import java.util.concurrent.Executor;
+@@ -127,11 +129,17 @@
+             @Override
+             public void onComplete(@NonNull Task<AuthResult> task) {
+                 if (task.isSuccessful()) {
+-                    Toast.makeText(LoginActivity.this, "Welcome to Shroomies!", Toast.LENGTH_SHORT).show();
+-                    Intent intent = new Intent(LoginActivity.this, MainActivity.class);
+-                    intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_CLEAR_TOP);
+-                    startActivity(intent);
+-                    finish();
++                    FirebaseUser muser = mAuth.getCurrentUser();
++                    if (muser != null) {
++                        for (UserInfo profile:muser.getProviderData()) {
++                            String name = profile.getDisplayName();
++                            Toast.makeText(LoginActivity.this, "Welcome to Shroomies!" + name, Toast.LENGTH_SHORT).show();
++                            Intent intent = new Intent(LoginActivity.this, MainActivity.class);
++                            intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_CLEAR_TOP);
++                            startActivity(intent);
++                            finish();
++                        }
++                    }
+                 }
+             }
+         }).addOnFailureListener(new OnFailureListener() {
+@@ -229,9 +237,10 @@
+                     FirebaseUser user = mAuth.getCurrentUser();
+ 
+                     Toast.makeText(LoginActivity.this, "User Signed In", Toast.LENGTH_SHORT).show();
++                    startActivity(new Intent(LoginActivity.this, MainActivity.class));
+                 }
+                 else{
+-                    Log.w("Login", "signInWithCredentail:Failure", task.getException());
++                    Log.w("Login", "signInWithCredential:Failure", task.getException());
+                     Toast.makeText(LoginActivity.this, "Authentication Failed", Toast.LENGTH_SHORT).show();
+                 }
+             }
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_30-Nov-20_00_01__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_30-Nov-20_00_01__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_29-Nov-20_00_23__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_29-Nov-20_00_23__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_28-Nov-20_18_35__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_28-Nov-20_18_35__Default_Changelist_.xml
