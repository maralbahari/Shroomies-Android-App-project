Index: app/src/main/java/com/example/shroomies/UserAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.shroomies;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.util.ArrayList;\r\n\r\n\r\n\r\npublic class UserAdapter extends RecyclerView.Adapter<UserAdapter.UserViewHolder> {\r\n   private ArrayList<User> userList;\r\n   private Context context;\r\n   View v;\r\n   private DatabaseReference rootRef;\r\n   private FirebaseAuth mAuth;\r\n   Boolean fromSearchMember ;\r\n   String apartmentID=\"\";\r\n   Boolean fromMemberPageWithRequestMember;\r\n\r\n\r\n    public UserAdapter(ArrayList<User> userList, Context context, Boolean fromSearchMember) {\r\n        this.userList = userList;\r\n        this.context = context;\r\n        this.fromSearchMember=fromSearchMember;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public UserAdapter.UserViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n\r\n        LayoutInflater layoutInflater = LayoutInflater.from(context);\r\n\r\n       v = layoutInflater.inflate(R.layout.send_request_card,parent,false);\r\n        rootRef= FirebaseDatabase.getInstance().getReference();\r\n        mAuth=FirebaseAuth.getInstance();\r\n        getUserRoomId();\r\n        return new UserViewHolder(v);\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull UserAdapter.UserViewHolder holder, final int position) {\r\n        if (userList.get(position).getID().equals(mAuth.getCurrentUser().getUid())){\r\n            userList.remove(position);\r\n            notifyItemRemoved(position);\r\n        }\r\n        if (fromSearchMember){\r\n            holder.sendRequest.setVisibility(View.VISIBLE);\r\n            holder.msgMember.setVisibility(View.GONE);\r\n            holder.removeMember.setVisibility(View.GONE);\r\n        }\r\n\r\n       holder.userName.setText(userList.get(position).getName());\r\n       if(!userList.get(position).getImage().isEmpty()){\r\n           GlideApp.with(context)\r\n                   .load(userList.get(position).getImage())\r\n                   .fitCenter()\r\n                   .circleCrop()\r\n                   .into(holder.userImage);\r\n       }\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return userList.size();\r\n    }\r\n\r\n    private void getUserRoomId(){\r\n        rootRef.child(\"Users\").child(mAuth.getCurrentUser().getUid()).child(\"isPartOfRoom\").addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if(snapshot.exists()){\r\n                    apartmentID=snapshot.getValue().toString();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    public class UserViewHolder extends RecyclerView.ViewHolder {\r\n        ImageView userImage;\r\n        TextView userName;\r\n        Button sendRequest;\r\n        ImageButton msgMember, removeMember;\r\n\r\n        public UserViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n            userImage=itemView.findViewById(R.id.request_member_photo);\r\n            userName=itemView.findViewById(R.id.request_member_name);\r\n            sendRequest=itemView.findViewById(R.id.send_request_btn);\r\n            msgMember = itemView.findViewById(R.id.msg_member);\r\n            removeMember = itemView.findViewById(R.id.remove_member);\r\n\r\n            msgMember.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View view) {\r\n                    Intent intent = new Intent(context, ChattingActivity.class);\r\n                    intent.putExtra(\"USERID\",userList.get(getAdapterPosition()).getID());\r\n                    context.startActivity(intent);\r\n                }\r\n            });\r\n\r\n            removeMember.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View view) {\r\n                    rootRef.child(\"apartments\").child(apartmentID).child(\"apartmentMembers\").child(userList.get(getAdapterPosition()).getID()).removeValue().addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                        @Override\r\n                        public void onSuccess(Void aVoid) {\r\n                            rootRef.child(\"Users\").child(userList.get(getAdapterPosition()).getID()).child(\"isPartOfRoom\").setValue(userList.get(getAdapterPosition()).getID()).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                @Override\r\n                                public void onSuccess(Void aVoid) {\r\n                                    Toast.makeText(context,\"User deleted successfully\",Toast.LENGTH_LONG).show();\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\r\n            sendRequest.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View v) {\r\n                    sendRequestToUser(userList.get(getAdapterPosition()).getID());\r\n                }\r\n            });\r\n\r\n        }\r\n        private void sendRequestToUser(final String id) {\r\n            rootRef.child(\"shroomieRequests\").child(mAuth.getCurrentUser().getUid()).child(id).child(\"requestType\").setValue(\"sent\").addOnCompleteListener(new OnCompleteListener<Void>() {\r\n                @Override\r\n                public void onComplete(@NonNull Task<Void> task) {\r\n                    if(task.isSuccessful()){\r\n                        rootRef.child(\"shroomieRequests\").child(id).child(mAuth.getCurrentUser().getUid()).child(\"requestType\").setValue(\"received\").addOnCompleteListener(new OnCompleteListener<Void>() {\r\n                            @Override\r\n                            public void onComplete(@NonNull Task<Void> task) {\r\n                                if(task.isSuccessful()){\r\n                                    Toast.makeText(context,\"invitation has been sent\",Toast.LENGTH_LONG).show();\r\n                                    sendRequest.setText(\"requested\");\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/shroomies/UserAdapter.java	(revision a02579e2e7c7ba24deea3ba7b54675c022c88185)
+++ app/src/main/java/com/example/shroomies/UserAdapter.java	(date 1611416144125)
@@ -60,10 +60,10 @@
 
     @Override
     public void onBindViewHolder(@NonNull UserAdapter.UserViewHolder holder, final int position) {
-        if (userList.get(position).getID().equals(mAuth.getCurrentUser().getUid())){
-            userList.remove(position);
-            notifyItemRemoved(position);
-        }
+//        if (userList.get(position).getID().equals(mAuth.getCurrentUser().getUid())){
+//            userList.remove(position);
+//            notifyItemRemoved(position);
+//        }
         if (fromSearchMember){
             holder.sendRequest.setVisibility(View.VISIBLE);
             holder.msgMember.setVisibility(View.GONE);
Index: app/src/main/java/com/example/shroomies/Favorite.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.shroomies;\r\n\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.fragment.app.FragmentTransaction;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.google.android.material.tabs.TabItem;\r\nimport com.google.android.material.tabs.TabLayout;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\n\r\npublic class Favorite extends Fragment {\r\n\r\n    TabLayout tabFav;\r\n    TabItem tabApt, tabPost;\r\n    ArrayList<PersonalPostModel> personalPostModelList;\r\n    List<Apartment> apartmentList;\r\n    RecyclerView favAptRecyclerView;\r\n    RecycleViewAdapterApartments favAptRecyclerAdapter;\r\n    FragmentManager fragmentManager;\r\n    FragmentTransaction fragmentTransaction;\r\n    TextView favText;\r\n    View v;\r\n\r\n    RecyclerView favPersonalRecyclerView;\r\n    TextView personalPostText;\r\n    PersonalPostRecyclerAdapter personalPostRecyclerAdapter;\r\n\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        v=inflater.inflate(R.layout.fragment_my_favorite, container, false);\r\n\r\n        FirebaseUser firebaseUser = FirebaseAuth.getInstance().getCurrentUser();\r\n        final String CurrUserId = firebaseUser.getUid();\r\n        DatabaseReference ref = FirebaseDatabase.getInstance().getReference(\"Favorite\").child(CurrUserId)\r\n                .child(\"ApartmentPost\");\r\n        ref.addListenerForSingleValueEvent(new ValueEventListener() {\r\n\r\n\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n\r\n        // checking if there are any fav apt\r\n                if (snapshot.getValue() != null) {\r\n\r\n                    favAptRecyclerView = v.findViewById(R.id.fav_recycler_view);\r\n                    favAptRecyclerView.setLayoutManager(new LinearLayoutManager(getContext()));\r\n                    apartmentList = new ArrayList<>();\r\n\r\n\r\n                    DatabaseReference DatabaseRef = FirebaseDatabase.getInstance().getReference(\"Favorite\");\r\n                    DatabaseReference ref = DatabaseRef.child(CurrUserId).child(\"ApartmentPost\");\r\n                    ref.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                        @Override\r\n                        public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                            for (DataSnapshot ds : snapshot.getChildren()) {\r\n                                Apartment favApt = ds.getValue(Apartment.class);\r\n                                apartmentList.add(favApt);\r\n\r\n                            }\r\n                            favAptRecyclerAdapter = new RecycleViewAdapterApartments(apartmentList, getContext());\r\n                            favAptRecyclerView.setAdapter(favAptRecyclerAdapter);\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onCancelled(@NonNull DatabaseError error) {\r\n                            Toast.makeText(getContext(), \"An unexpected error occured\", Toast.LENGTH_LONG);\r\n\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    favText = v.findViewById(R.id.FavNoAptText);\r\n                    favText.setVisibility(View.VISIBLE); }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) { }});\r\n    return v;\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n        super.onViewCreated(view, savedInstanceState);\r\n        tabFav = (TabLayout) v.findViewById(R.id.tab_layout_Fav);\r\n        tabApt = (TabItem) v.findViewById(R.id.tab_button_fav_apartment);\r\n        tabPost = (TabItem) v.findViewById(R.id.tab_button_fav_personal);\r\n\r\n        favAptRecyclerView = v.findViewById(R.id.fav_recycler_view);\r\n        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(getContext());\r\n        favAptRecyclerView.setLayoutManager(linearLayoutManager);\r\n\r\n        tabFav.addOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {\r\n            @Override\r\n            public void onTabSelected(TabLayout.Tab tab) {\r\n                if(tab.getPosition()==0){\r\n                    // find any fragment that is in the frame\r\n                    Fragment fragment = getActivity().getSupportFragmentManager().findFragmentById(R.id.frame_layout_fav);\r\n                    if(fragment!=null){\r\n                        Toast.makeText(getActivity(),\"exists \" , Toast.LENGTH_LONG).show();\r\n                        fragmentTransaction = getActivity().getSupportFragmentManager().beginTransaction();\r\n                        fragmentTransaction.remove(fragment);\r\n                        fragmentTransaction.commit();\r\n                        fragmentTransaction.addToBackStack(null);\r\n\r\n                    }\r\n                    // display the recycler view\r\n                    favAptRecyclerView.setVisibility(View.VISIBLE);\r\n                }\r\n                else if(tab.getPosition()==1){\r\n\r\n//                    favAptRecyclerView.setVisibility(View.GONE);\r\n//                    fragmentTransaction = getActivity().getSupportFragmentManager().beginTransaction();\r\n//                    fragmentTransaction.replace(R.id.frame_layout_fav, new FavTabPersonal());\r\n//                    fragmentTransaction.commit();\r\n                    FirebaseUser firebaseUser = FirebaseAuth.getInstance().getCurrentUser();\r\n                    final String CurrUserId = firebaseUser.getUid();\r\n                    DatabaseReference ref = FirebaseDatabase.getInstance().getReference(\"Favorite\").child(CurrUserId)\r\n                            .child(\"PersonalPost\");\r\n                    ref.addListenerForSingleValueEvent(new ValueEventListener(){\r\n\r\n\r\n                        @Override\r\n                        public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n\r\n                            if(snapshot.getValue() != null){\r\n                                favAptRecyclerView = v.findViewById(R.id.fav_recycler_view);\r\n                                favAptRecyclerView.setLayoutManager(new LinearLayoutManager(getContext()));\r\n                                personalPostModelList = new ArrayList<>();\r\n                                DatabaseReference DatabaseRef = FirebaseDatabase.getInstance().getReference(\"Favorite\");\r\n                                DatabaseReference ref = DatabaseRef.child(CurrUserId).child(\"PersonalPost\");\r\n                                ref.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                    @Override\r\n                                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                        for(DataSnapshot ds : snapshot.getChildren()){\r\n                                            PersonalPostModel personalPost = ds.getValue(PersonalPostModel.class);\r\n                                            personalPostModelList.add(personalPost);\r\n                                        }\r\n                                        personalPostRecyclerAdapter = new PersonalPostRecyclerAdapter(personalPostModelList, getContext());\r\n                                        favPersonalRecyclerView.setAdapter(personalPostRecyclerAdapter);\r\n\r\n                                    }\r\n\r\n                                    @Override\r\n                                    public void onCancelled(@NonNull DatabaseError error) {\r\n                                        Toast.makeText(getContext(), \"An unexpected error occured\", Toast.LENGTH_LONG);\r\n\r\n                                    }\r\n                                });\r\n                            }\r\n\r\n                            else{\r\n                                personalPostText = v.findViewById(R.id.TV_noFavPersonalPost);\r\n                                personalPostText.setVisibility(View.VISIBLE);\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onCancelled(@NonNull DatabaseError error) { }\r\n                    });\r\n\r\n\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onTabUnselected(TabLayout.Tab tab) {\r\n            }\r\n\r\n            @Override\r\n            public void onTabReselected(TabLayout.Tab tab) {\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/shroomies/Favorite.java	(revision a02579e2e7c7ba24deea3ba7b54675c022c88185)
+++ app/src/main/java/com/example/shroomies/Favorite.java	(date 1611418876766)
@@ -52,6 +52,8 @@
                              Bundle savedInstanceState) {
         // Inflate the layout for this fragment
         v=inflater.inflate(R.layout.fragment_my_favorite, container, false);
+        favAptRecyclerView = v.findViewById(R.id.fav_recycler_view);
+
 
         FirebaseUser firebaseUser = FirebaseAuth.getInstance().getCurrentUser();
         final String CurrUserId = firebaseUser.getUid();
@@ -66,7 +68,7 @@
         // checking if there are any fav apt
                 if (snapshot.getValue() != null) {
 
-                    favAptRecyclerView = v.findViewById(R.id.fav_recycler_view);
+
                     favAptRecyclerView.setLayoutManager(new LinearLayoutManager(getContext()));
                     apartmentList = new ArrayList<>();
 
@@ -142,6 +144,9 @@
                     final String CurrUserId = firebaseUser.getUid();
                     DatabaseReference ref = FirebaseDatabase.getInstance().getReference("Favorite").child(CurrUserId)
                             .child("PersonalPost");
+                    personalPostModelList = new ArrayList<>();
+                    personalPostRecyclerAdapter = new PersonalPostRecyclerAdapter(personalPostModelList, getContext());
+                    favAptRecyclerView.setAdapter(personalPostRecyclerAdapter);
                     ref.addListenerForSingleValueEvent(new ValueEventListener(){
 
 
@@ -149,9 +154,7 @@
                         public void onDataChange(@NonNull DataSnapshot snapshot) {
 
                             if(snapshot.getValue() != null){
-                                favAptRecyclerView = v.findViewById(R.id.fav_recycler_view);
-                                favAptRecyclerView.setLayoutManager(new LinearLayoutManager(getContext()));
-                                personalPostModelList = new ArrayList<>();
+
                                 DatabaseReference DatabaseRef = FirebaseDatabase.getInstance().getReference("Favorite");
                                 DatabaseReference ref = DatabaseRef.child(CurrUserId).child("PersonalPost");
                                 ref.addListenerForSingleValueEvent(new ValueEventListener() {
@@ -161,10 +164,11 @@
                                             PersonalPostModel personalPost = ds.getValue(PersonalPostModel.class);
                                             personalPostModelList.add(personalPost);
                                         }
-                                        personalPostRecyclerAdapter = new PersonalPostRecyclerAdapter(personalPostModelList, getContext());
-                                        favPersonalRecyclerView.setAdapter(personalPostRecyclerAdapter);
+                                        personalPostRecyclerAdapter.notifyDataSetChanged();
+
 
                                     }
+
 
                                     @Override
                                     public void onCancelled(@NonNull DatabaseError error) {
